{"version":3,"file":"static/js/415.571f0288.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.jsx","components/MoviesList/MoviesList.styled.jsx","pages/Home.jsx","pages/Pages.styled.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapperLoader = styled.div`\n    text-align: center;\n    margin-top: 150px;\n`;","import { RotatingLines } from 'react-loader-spinner';\nimport { WrapperLoader } from './Loader.styled';\n\nexport const Loader = () => (\n  <WrapperLoader>\n    <RotatingLines\n      strokeColor=\"blue\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"120\"\n      visible={true}\n    />\n  </WrapperLoader>\n);","import { Link, useLocation } from \"react-router-dom\";\nimport { LiStyle, UlStyle, WrapCardStyle } from \"./MoviesList.styled\";\n\nconst MoviesList = ({ films }) => {\n    const location = useLocation();\n    \n    return <UlStyle>\n        {films.map(({ id, title, overview, poster_path }) =>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n                <LiStyle key={films.id}>\n                    <img src={poster_path ?\n                        `http://image.tmdb.org/t/p/w154${poster_path}` :\n                        'https://www.braasco.com//ASSETS/IMAGES/ITEMS/ZOOM/no_image.jpeg'}\n                        alt={title} width=\"150\" height=\"230\" />\n                    <WrapCardStyle>\n                        <h3>{title}</h3>\n                        <p>{overview}</p>\n                    </WrapCardStyle>\n                </LiStyle>\n            </Link>\n        )}\n    </UlStyle>\n};\n\n\nexport default MoviesList;","import styled from 'styled-components';\n\nexport const UlStyle = styled.ul`\n    display: flex;\n    gap: 30px;\n    align-items: center;\n    flex-wrap: wrap;\n`;\n\nexport const LiStyle = styled.li`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    gap: 5px;\n    width: 150px;\n    max-height: 400px;\n    cursor: pointer;\n    overflow: hidden;\n`;\n\nexport const WrapCardStyle = styled.div`\n    min-height: 160px;\n    display: flex;\n    gap: 8px;\n    flex-direction: column;\n`\n\n","import { Loader } from \"components/Loader/Loader\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\nimport { useEffect, useState } from \"react\";\nimport { fetchMovies, onFetchError } from \"services/api\";\nimport { SectionStyle } from \"./Pages.styled\";\n\nconst endPoint = \"/trending/movie/day\";\n\nconst Home = () => {\n    const [loading, setLoading] = useState(true);\n    const [films, setFilms] = useState([]);\n    \n    useEffect(() => {\n        if (films.length > 0) {\n            return;\n        };\n        fetchMovies(endPoint)\n            .then(data => {\n                setFilms(data.results);\n            })\n            .catch(onFetchError)\n            .finally(() => setLoading(false));\n    }, [films]);\n\n    return <SectionStyle>\n        <h2>Trending today</h2>\n        {loading && <Loader />}\n        <MoviesList films={films} />\n    </SectionStyle>\n};\n\nexport default Home;","import styled from 'styled-components';\nimport {Link} from \"react-router-dom\";\n\nexport const SectionStyle = styled.section`\npadding: 20px;\ndisplay: flex;\nflex-direction: column;\ngap: 20px;\n`\n\nexport const StyledLink = styled(Link)`\n  color: blue;\n  font-weight: 700;\n  padding: 8px;\n  border: 1px solid blue;\n  width: 100px;\n  &.active {\n    color: orange;\n  }\n`;\n\nexport const WrapStyle = styled.div`\ndisplay: flex;\ngap: 20px;\n`;\n\nexport const CardStyle = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap: 20px;\nwidth: 400px;\n`;\n\nexport const AddListStyle = styled.ul`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\nfont-weight: 500;\ntext-decoration: underline;\n`;\n","import axios from \"axios\";\nimport { Notify } from \"notiflix\";\n\nconst URL = \"https://api.themoviedb.org/3\";\nconst KEY = \"13b0b106d3860aa17f500bd5bf9a1afe\";\nexport const paramsForNotify = {\n  position: 'center-center',\n  timeout: 3000,\n  width: '400px',\n  fontSize: '24px'\n};\n\nexport async function fetchMovies(endPoint) {\n    const url = `${URL}${endPoint}?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function fetchSearchMovies(endPoint, query) {\n    const url = `${URL}${endPoint}?api_key=${KEY}&query=${query}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function fetchMovieDetails(endPoint, movieId) {\n    const url = `${URL}${endPoint}/${movieId}?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function fetchMovieCast(endPoint, movieId) {\n    const url = `${URL}${endPoint}/${movieId}/credits?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function fetchMovieReviews(endPoint, movieId) {\n    const url = `${URL}${endPoint}/${movieId}/reviews?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport function onFetchError() {\n    Notify.failure('Oops! Something went wrong! Try reloading the page or make another choice!', paramsForNotify);\n};\n"],"names":["WrapperLoader","styled","Loader","strokeColor","strokeWidth","animationDuration","width","visible","films","location","useLocation","map","id","title","overview","poster_path","to","state","from","src","alt","height","UlStyle","LiStyle","WrapCardStyle","useState","loading","setLoading","setFilms","useEffect","length","fetchMovies","then","data","results","catch","onFetchError","finally","SectionStyle","StyledLink","Link","WrapStyle","CardStyle","AddListStyle","URL","KEY","paramsForNotify","position","timeout","fontSize","endPoint","url","axios","response","fetchSearchMovies","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","Notify"],"sourceRoot":""}