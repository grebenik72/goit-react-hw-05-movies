{"version":3,"file":"static/js/765.8a16c3f0.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.jsx","components/MoviesList/MoviesList.styled.jsx","components/Search/Search.staled.jsx","components/Search/Search.jsx","pages/Movies.jsx","pages/Pages.styled.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapperLoader = styled.div`\n    text-align: center;\n    margin-top: 150px;\n`;","import { RotatingLines } from 'react-loader-spinner';\nimport { WrapperLoader } from './Loader.styled';\n\nexport const Loader = () => (\n  <WrapperLoader>\n    <RotatingLines\n      strokeColor=\"blue\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"120\"\n      visible={true}\n    />\n  </WrapperLoader>\n);","import { Link, useLocation } from \"react-router-dom\";\nimport { LiStyle, UlStyle, WrapCardStyle } from \"./MoviesList.styled\";\n\nconst MoviesList = ({ films }) => {\n    const location = useLocation();\n    \n    return <UlStyle>\n        {films.map(({ id, title, overview, poster_path }) =>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n                <LiStyle key={films.id}>\n                    <img src={poster_path ?\n                        `http://image.tmdb.org/t/p/w154${poster_path}` :\n                        'https://www.braasco.com//ASSETS/IMAGES/ITEMS/ZOOM/no_image.jpeg'}\n                        alt={title} width=\"150\" height=\"230\" />\n                    <WrapCardStyle>\n                        <h3>{title}</h3>\n                        <p>{overview}</p>\n                    </WrapCardStyle>\n                </LiStyle>\n            </Link>\n        )}\n    </UlStyle>\n};\n\n\nexport default MoviesList;","import styled from 'styled-components';\n\nexport const UlStyle = styled.ul`\n    display: flex;\n    gap: 30px;\n    align-items: center;\n    flex-wrap: wrap;\n`;\n\nexport const LiStyle = styled.li`\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    gap: 5px;\n    width: 150px;\n    max-height: 400px;\n    cursor: pointer;\n    overflow: hidden;\n`;\n\nexport const WrapCardStyle = styled.div`\n    min-height: 160px;\n    display: flex;\n    gap: 8px;\n    flex-direction: column;\n`\n\n","import styled from 'styled-components'\n\nexport const SearchbarStyle = styled.header\n  `top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: blue;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  height: 48px;\n  border: 0;\n  padding: 8px;\n  font: inherit;\n  font-weight: 500;\n  font-size: 20px;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover{\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 10px;\n  padding-right: 10px;\n  &::placeholder{\n    font: inherit;\n    font-size: 18px;\n  }\n`","import { SearchForm, SearchFormButton, SearchFormInput, SearchbarStyle } from \"./Search.staled\";\n\nconst Searchbar = ({ onSubmitSearchBar, value }) => (\n    <SearchbarStyle>\n    <SearchForm onSubmit={onSubmitSearchBar}>\n        <SearchFormButton>\n            <span>Search</span>\n        </SearchFormButton>\n\n        <SearchFormInput\n            type=\"text\"\n            name=\"search\"\n            autoComplete=\"off\"\n            autoFocus\n            defaultValue={value}\n            placeholder=\"Search movies\"\n        />\n    </SearchForm>\n    </SearchbarStyle>\n);\n\n\nexport default Searchbar;\n","import { Loader } from \"components/Loader/Loader\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\nimport Searchbar from \"components/Search/Search\";\nimport { Notify } from \"notiflix\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { fetchSearchMovies, onFetchError, paramsForNotify } from \"services/api\";\nimport { SectionStyle } from \"./Pages.styled\";\n\nconst endPoint = '/search/movie';\n\nconst Movies = () => {\n  const [loading, setLoading] = useState(false);\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? \"\";\n  \n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    };\n    if (films.length > 0) {\n      return;\n    };\n\n    setLoading(true);\n    fetchSearchMovies(endPoint, searchQuery)\n      .then(data => {\n        setFilms(data.results);\n      })\n      .catch(onFetchError)\n      .finally(() => setLoading(false));\n    \n  }, [films, searchQuery]);\n\n  const onSubmitSearchBar = (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const searchValue = form.search.value\n      .trim()\n      .toLowerCase()\n      .split(' ')\n      .join('+');;\n    \n    if (searchValue === '') {\n      Notify.info('Enter your request, please!', paramsForNotify);\n      setSearchParams({});\n      setFilms([]);\n      return;\n    };\n\n    if (searchValue === searchQuery) {\n      Notify.info('Enter new request, please!', paramsForNotify);\n      return;\n    };\n\n    setSearchParams({ query: searchValue });\n    setFilms([]);\n  };\n\n  return <div>\n    <Searchbar onSubmitSearchBar={onSubmitSearchBar} value={searchQuery} />\n    <SectionStyle>\n      {loading && <Loader />}\n      <MoviesList films={films} />\n    </SectionStyle>\n  </div>\n};\n\nexport default Movies;","import styled from 'styled-components';\nimport {Link} from \"react-router-dom\";\n\nexport const SectionStyle = styled.section`\npadding: 20px;\ndisplay: flex;\nflex-direction: column;\ngap: 20px;\n`\n\nexport const StyledLink = styled(Link)`\n  color: blue;\n  font-weight: 700;\n  padding: 8px;\n  border: 1px solid blue;\n  width: 100px;\n  &.active {\n    color: orange;\n  }\n`;\n\nexport const WrapStyle = styled.div`\ndisplay: flex;\ngap: 20px;\n`;\n\nexport const CardStyle = styled.div`\ndisplay: flex;\nflex-direction: column;\ngap: 20px;\nwidth: 400px;\n`;\n\nexport const AddListStyle = styled.ul`\ndisplay: flex;\nflex-direction: column;\ngap: 10px;\nfont-weight: 500;\ntext-decoration: underline;\n`;\n","import axios from \"axios\";\nimport { Notify } from \"notiflix\";\n\nconst URL = \"https://api.themoviedb.org/3\";\nconst KEY = \"13b0b106d3860aa17f500bd5bf9a1afe\";\nexport const paramsForNotify = {\n  position: 'center-center',\n  timeout: 3000,\n  width: '400px',\n  fontSize: '24px'\n};\n\nexport async function fetchMovies(endPoint) {\n    const url = `${URL}${endPoint}?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function fetchSearchMovies(endPoint, query) {\n    const url = `${URL}${endPoint}?api_key=${KEY}&query=${query}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function fetchMovieDetails(endPoint, movieId) {\n    const url = `${URL}${endPoint}/${movieId}?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function fetchMovieCast(endPoint, movieId) {\n    const url = `${URL}${endPoint}/${movieId}/credits?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport async function fetchMovieReviews(endPoint, movieId) {\n    const url = `${URL}${endPoint}/${movieId}/reviews?api_key=${KEY}`\n    const response = await axios.get(url);\n    return response.data;\n};\n\nexport function onFetchError() {\n    Notify.failure('Oops! Something went wrong! Try reloading the page or make another choice!', paramsForNotify);\n};\n"],"names":["WrapperLoader","styled","Loader","strokeColor","strokeWidth","animationDuration","width","visible","films","location","useLocation","map","id","title","overview","poster_path","to","state","from","src","alt","height","UlStyle","LiStyle","WrapCardStyle","SearchbarStyle","SearchForm","SearchFormButton","SearchFormInput","onSubmitSearchBar","value","onSubmit","type","name","autoComplete","autoFocus","defaultValue","placeholder","useState","loading","setLoading","setFilms","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","length","fetchSearchMovies","then","data","results","catch","onFetchError","finally","Search","event","preventDefault","searchValue","currentTarget","search","trim","toLowerCase","split","join","Notify","paramsForNotify","query","MoviesList","SectionStyle","StyledLink","Link","WrapStyle","CardStyle","AddListStyle","URL","KEY","position","timeout","fontSize","fetchMovies","endPoint","url","axios","response","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}